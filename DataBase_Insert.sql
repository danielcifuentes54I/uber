/*******CREACIÃ“N DE TABLAS Y SECUENCIAS*******/
CREATE TABLE COUNTRIES
(
  ID_COUNTRY INT primary key,
  NAME_COUNTRY VARCHAR(255) NOT NULL,
  CODE_COUNTRY INT NOT NULL,
  CURRENCY VARCHAR(255) NOT NULL
);
CREATE SEQUENCE countries_seq START WITH 1 INCREMENT BY 1 NOCYCLE;

CREATE TABLE CITIES
(
  ID_CITY INT primary key,
  NAME_CITY VARCHAR(255) NOT NULL,
  ID_COUNTRY INT NOT NULL,
  CONSTRAINT FK_CITY_COUNTRY  FOREIGN KEY (ID_COUNTRY) REFERENCES COUNTRIES(ID_COUNTRY)
);
CREATE SEQUENCE cities_seq START WITH 1 INCREMENT BY 1 NOCYCLE;

CREATE TABLE LANGUAGES
(
  ID_LANGUAGE INT primary key,
  NAME_LANGUAGE VARCHAR(255) NOT NULL
);
CREATE SEQUENCE languages_seq START WITH 1 INCREMENT BY 1 NOCYCLE;

CREATE TABLE PERSONS
(
  ID_PERSON INT primary key,
  FIRST_NAME VARCHAR(255) NOT NULL,
  LAST_NAME VARCHAR(255) NOT NULL,
  EMAIL VARCHAR(255) NOT NULL,
  SECOND_EMAIL VARCHAR(255) NOT NULL,
  PASSWORD VARCHAR(255) NOT NULL,
  INVITATION_CODE VARCHAR(255) NOT NULL,
  MOBILE VARCHAR(255) NOT NULL,
  URL_PHOTO VARCHAR(255) NOT NULL,
  ID_CITY INT NOT NULL,
  ID_LANGUAGE INT NOT NULL,
  CONSTRAINT FK_PERSON_COUNTRY  FOREIGN KEY (ID_CITY) REFERENCES CITIES(ID_CITY),
  CONSTRAINT FK_PERSON_LANGUAGE  FOREIGN KEY (ID_LANGUAGE) REFERENCES LANGUAGES(ID_LANGUAGE)
);
CREATE SEQUENCE persons_seq START WITH 1 INCREMENT BY 1 NOCYCLE;

CREATE TABLE PAYMENT_METHODS
(
  ID_PAYMENT INT primary key,
  DESCRIPTIONS VARCHAR(255) NOT NULL
);
CREATE SEQUENCE payment_methods_seq START WITH 1 INCREMENT BY 1 NOCYCLE;

CREATE TABLE PAYMENT_PERSONS
(
  ID_PAYMENT_PERSON INT primary key,
  ID_PAYMENT INT NOT NULL,
  ID_PERSON INT NOT NULL,
  DESCRIPTIONS VARCHAR(255) NOT NULL,
  BUSINESS VARCHAR(255) NOT NULL,
  CONSTRAINT FK_PAYMENT_PERSONS_PAYMENT   FOREIGN KEY (ID_PAYMENT) REFERENCES PAYMENT_METHODS(ID_PAYMENT),
  CONSTRAINT FK_PAYMENT_PERSONS_PERSONS   FOREIGN KEY (ID_PERSON) REFERENCES PERSONS(ID_PERSON)
);
CREATE SEQUENCE payment_persons_seq START WITH 1 INCREMENT BY 1 NOCYCLE;


CREATE TABLE PROMOTION_CODES
(
  ID_CODE INT primary key,
  COURANGE FLOAT NOT NULL,
  DESCRIPTION VARCHAR(255)
);
CREATE SEQUENCE promotion_codes_seq START WITH 1 INCREMENT BY 1 NOCYCLE;

CREATE TABLE PERSON_CODES
(
  ID_PERSON_CODE INT primary key,
  ID_PROMOTION_CODE INT NOT NULL,
  ID_PERSON INT NOT NULL,
  STATUS VARCHAR2(1),
  CONSTRAINT FK_PERSON_CODE_PROMOTION   FOREIGN KEY (ID_PROMOTION_CODE) REFERENCES PROMOTION_CODES(ID_CODE),
  CONSTRAINT FK_PERSON_CODE_PERSON   FOREIGN KEY (ID_PERSON) REFERENCES PERSONS(ID_PERSON)
);
CREATE SEQUENCE person_codes_seq START WITH 1 INCREMENT BY 1 NOCYCLE;


CREATE TABLE DRIVERS
(
  ID_DRIVER INT primary key,
  ID_PERSON INT NOT NULL,
  ACCOUNT_NUMBER VARCHAR(255) NOT NULL,
  NAME_BANK VARCHAR(255) NOT NULL,
  CONSTRAINT FK_DRIVER_PERSON  FOREIGN KEY (ID_PERSON) REFERENCES PERSONS(ID_PERSON)
);
CREATE SEQUENCE drivers_seq START WITH 1 INCREMENT BY 1 NOCYCLE;

CREATE TABLE VEHICLES
(
ID_VEHICLE INT primary key,
LICENSE_PLATE VARCHAR(15) NOT NULL,
BRAND VARCHAR(50),
V_MODEL VARCHAR(50),
V_YEAR INT,
VEHICLE_TYPE INT
);
CREATE SEQUENCE vehicles_seq START WITH 1 INCREMENT BY 1 NOCYCLE;

CREATE TABLE VEHICLES_DRIVERS
(
ID_VEHICLE_DIRVER INT PRIMARY KEY,
ID_VEHICLE INT NOT NULL,
ID_DRIVER INT NOT NULL,
DATE_LINKAGE DATE NOT NULL,
STATUS VARCHAR2(1),
CONSTRAINT FK_VEHICLES_DRIVERS_VEHICLES  FOREIGN KEY (ID_VEHICLE) REFERENCES VEHICLES(ID_VEHICLE),
CONSTRAINT FK_VEHICLES_DRIVERS_DRIVERS   FOREIGN KEY (ID_DRIVER) REFERENCES DRIVERS(ID_DRIVER)
);
CREATE SEQUENCE vehicles_drivers_seq START WITH 1 INCREMENT BY 1 NOCYCLE;


CREATE TABLE TRAVELS
(
ID_TRAVEL INT PRIMARY KEY,
DATE_TRAVEL DATE NOT NULL,
TRAVEL_TYPE INT NOT NULL,
TYPE_RATE INT NOT NULL,
STATUS VARCHAR2(1)NOT NULL,
ORIGIN_ADDRESS VARCHAR(50),
DESTINATION_ADDRESS VARCHAR(50),
DISTANCE VARCHAR(50),
WEATHER VARCHAR(50),
ID_VEHICLE_DIRVER INT NOT NULL,
CONSTRAINT FK_TRAVELS_VEHICLES_DRIVERS   FOREIGN KEY (ID_VEHICLE_DIRVER) REFERENCES VEHICLES_DRIVERS(ID_VEHICLE_DIRVER)
);
CREATE SEQUENCE travels_seq START WITH 1 INCREMENT BY 1 NOCYCLE;

CREATE TABLE GPS_POSITION
(
ID_GPS_POSITION INT PRIMARY KEY,
ID_TRAVEL INT NOT NULL,
GPS_LATITUDE FLOAT NOT NULL,
GPS_LENGTH FLOAT NOT NULL,
CONSTRAINT FK_GPS_POSITION_TRAVELS   FOREIGN KEY (ID_GPS_POSITION) REFERENCES TRAVELS(ID_TRAVEL)
);
CREATE SEQUENCE gps_position_seq START WITH 1 INCREMENT BY 1 NOCYCLE;

CREATE TABLE TRAVEL_DETAIL
(
ID_TRAVEL_DETAIL INT PRIMARY KEY,
ID_TRAVEL INT NOT NULL,
ID_PERSON INT NOT NULL,
TRAVEL_COST FLOAT NOT NULL,
SUBTOTAL FLOAT NOT NULL,
RESERVATION_FEE FLOAT,
RECHARGES FLOAT,
PATTERN_SPEED FLOAT,
TIP FLOAT,
DERIVATIVE FLOAT,
TOTAL FLOAT NOT NULL,
CONSTRAINT FK_TRAVEL_DETAIL_TRAVELS   FOREIGN KEY (ID_TRAVEL) REFERENCES TRAVELS(ID_TRAVEL),
CONSTRAINT FK_TRAVEL_DETAIL_PERSONS   FOREIGN KEY (ID_PERSON) REFERENCES PERSONS(ID_PERSON)
);
CREATE SEQUENCE travel_detail_seq START WITH 1 INCREMENT BY 1 NOCYCLE;

CREATE TABLE PAYMENT
(
ID_PAYMENT INT PRIMARY KEY,
PAYMENT_DATE DATE NOT NULL,
TOTAL FLOAT NOT NULL
);
CREATE SEQUENCE payment_seq START WITH 1 INCREMENT BY 1 NOCYCLE;

CREATE TABLE SETTLEMENTS
(
ID_SETTLEMENTS INT PRIMARY KEY,
ID_TRAVEL INT NOT NULL,
TRAVEL_VALUE FLOAT NOT NULL,
VALUE_DISCOUNT FLOAT NOT NULL,
TOTAL FLOAT NOT NULL,
STATUS INT NOT NULL,
SETTLEMENTS_DATE DATE NOT NULL,
CONSTRAINT FK_SETTLEMENTS_TRAVELS   FOREIGN KEY (ID_TRAVEL) REFERENCES TRAVELS(ID_TRAVEL)
);
CREATE SEQUENCE settlements_seq START WITH 1 INCREMENT BY 1 NOCYCLE;

CREATE TABLE PAYMENT_LIQUIDATION
(
ID_PAYMENT_LIQUIDATION INT PRIMARY KEY,
ID_SETTLEMENTS INT NOT NULL,
ID_PAYMENT INT NOT NULL,
CONSTRAINT FK_PAYMENT_LIQ_SETTLEMENTS   FOREIGN KEY (ID_SETTLEMENTS) REFERENCES SETTLEMENTS(ID_SETTLEMENTS),
CONSTRAINT FK_PAYMENT_LIQ_PAYMENT   FOREIGN KEY (ID_PAYMENT) REFERENCES PAYMENT(ID_PAYMENT)
);
CREATE SEQUENCE payment_liquidation_seq START WITH 1 INCREMENT BY 1 NOCYCLE;
